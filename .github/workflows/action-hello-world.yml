name: 'Hello World'

on:

  push:
    branches: none # [main]
  pull_request:
    branches: none # [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: git-action-flow-hello
  IMAGE_TAG: 1.0.${{ github.run_number}}

jobs:
  build-container:
  
    runs-on: "ubuntu-latest" 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build the Docker image
        id: phase1
        working-directory: Meir-Dir
        run: docker build . --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG



  build-push-docker:
    needs: build-container
    runs-on: "ubuntu-latest" 
    permissions:
      contents: read
      packages: write
      id-token: write 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_TAG}}

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/{{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG}}
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
